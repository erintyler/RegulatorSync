name: Build Regulator Plugin

on:
  push:
    tags:
        - '*.*.*'
          
permissions: 
  contents: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        
      - name: Set up .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '9.0.x'
          cache: 'true'
          cache-dependency-path: |
            Regulator.Client/Regulator.Client.csproj
            Regulator.Services.Sync.Shared/Regulator.Services.Sync.Shared.csproj
      
      - name: Restore dependencies
        run: dotnet restore Regulator.Client/Regulator.Client.csproj
        
      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
        
      - name: Set regulator.client.yaml version
        run: |
          (Get-Content Regulator.Client/regulator.client.yaml) -replace 'version: .*', "version: ${{ github.ref_name }}" | Set-Content Regulator.Client/regulator.client.yaml
        
      - name: Build 🔨
        run: dotnet build Regulator.Client/Regulator.Client.csproj --configuration Release --no-restore
        
      - name: Rename latest.zip to Regulator.Client.zip
        run: |
          Rename-Item -Path "Regulator.Client/bin/Release/Regulator.Client/latest.zip" -NewName "Regulator.Client.zip"
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            Regulator.Client/bin/Release/Regulator.Client/Regulator.Client.zip
            
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} Regulator.Client/bin/Release/Regulator.Client/Regulator.Client.zip --title "Regulator Plugin ${{ github.ref_name }}" --generate-notes
          
      - name: Update Dalamud repo.json
        run: |
          git fetch origin main
          git checkout main
          git pull
          $tag = "${{ github.ref_name }}"
          $repo = @{
            Name = "Regulator"
            Description = "Sync your appearance with your friends!"
            RepoUrl = "https://github.com/erintyler/RegulatorSync"
            Tags = @("plugin", "regulator")
            Punchline = "Sync your appearance with your friends!"
            Author = "Saxolotl"
            Version = "${{ github.ref_name }}"
            DownloadLinkInstall = "https://github.com/erintyler/RegulatorSync/releases/download/$tag/Regulator.Client.zip"
            DownloadLinkUpdate = "https://github.com/erintyler/RegulatorSync/releases/download/$tag/Regulator.Client.zip"
            InternalName = "Regulator.Client"
            DalamudApiLevel = 13
          }
          @($repo) | ConvertTo-Json -AsArray -Depth 3 | Set-Content repo.json
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add repo.json
          git commit -m "Update repo.json for $tag"
          git push origin main
        shell:
          pwsh